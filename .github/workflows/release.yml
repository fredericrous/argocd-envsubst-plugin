name: Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    outputs:
      version: ${{ steps.version.outputs.version }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Extract version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release-chart:
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: write
    continue-on-error: true
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          
      - name: Install Helm
        uses: azure/setup-helm@v3
        
      - name: Update Chart values
        run: |
          # Update image tag in values.yaml
          sed -i "s|tag: .*|tag: v${{ needs.build-and-push.outputs.version }}|" helm/values.yaml
          
          # Update Chart version
          sed -i "s|^version: .*|version: ${{ needs.build-and-push.outputs.version }}|" helm/Chart.yaml
          sed -i "s|^appVersion: .*|appVersion: v${{ needs.build-and-push.outputs.version }}|" helm/Chart.yaml
          
      - name: Package Helm chart
        run: |
          mkdir -p .deploy
          helm package helm --destination .deploy
          
      - name: Checkout charts repository
        uses: actions/checkout@v4
        with:
          repository: fredericrous/charts
          token: ${{ secrets.CHARTS_REPO_TOKEN }}
          path: charts
          ref: gh-pages
          
      - name: Copy chart to charts repo
        run: |
          cp .deploy/*.tgz charts/
          cd charts
          helm repo index . --url https://fredericrous.github.io/charts
          git add .
          git commit -m "Add argocd-envsubst-plugin ${{ needs.build-and-push.outputs.version }}"
          git push

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: always() && needs.build-and-push.result == 'success'
    permissions:
      contents: write
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            ## What's Changed
            
            ArgoCD Envsubst Plugin v${{ needs.build-and-push.outputs.version }}
            
            ### Docker Image
            ```bash
            docker pull ghcr.io/${{ github.repository }}:v${{ needs.build-and-push.outputs.version }}
            ```
            
            ### Helm Installation
            ```bash
            helm repo add fredericrous https://fredericrous.github.io/charts
            helm repo update
            helm install argocd-envsubst fredericrous/argocd-envsubst-plugin --version ${{ needs.build-and-push.outputs.version }}
            ```
            
            ### Kustomize Installation
            ```yaml
            resources:
            - https://github.com/${{ github.repository }}/deploy?ref=v${{ needs.build-and-push.outputs.version }}
            ```
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/v${{ needs.build-and-push.outputs.version }}...v${{ needs.build-and-push.outputs.version }}
          generate_release_notes: true