name: Bump Version

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version type (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          
      - name: Get current version
        id: current
        run: |
          # Get latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "version=${LATEST_TAG#v}" >> $GITHUB_OUTPUT
          
      - name: Calculate new version
        id: new
        run: |
          CURRENT="${{ steps.current.outputs.version }}"
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT"
          MAJOR="${VERSION_PARTS[0]:-0}"
          MINOR="${VERSION_PARTS[1]:-0}"
          PATCH="${VERSION_PARTS[2]:-0}"
          
          case "${{ github.event.inputs.version }}" in
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            patch)
              PATCH=$((PATCH + 1))
              ;;
          esac
          
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
          
      - name: Update Chart version
        run: |
          sed -i "s|^version: .*|version: ${{ steps.new.outputs.version }}|" helm/Chart.yaml
          
      - name: Update documentation
        run: |
          # Update image references in README
          sed -i "s|argocd-envsubst-plugin:v[0-9.]*|argocd-envsubst-plugin:${{ steps.new.outputs.tag }}|g" README.md
          sed -i "s|argocd-envsubst-plugin/deploy?ref=v[0-9.]*|argocd-envsubst-plugin/deploy?ref=${{ steps.new.outputs.tag }}|g" README.md
          
          # Update references in patch files
          find . -name "*.yaml" -type f -exec sed -i "s|argocd-envsubst-plugin:v[0-9.]*|argocd-envsubst-plugin:${{ steps.new.outputs.tag }}|g" {} \;
          find . -name "*.yaml" -type f -exec sed -i "s|argocd-envsubst-plugin/.*?ref=v[0-9.]*|argocd-envsubst-plugin?ref=${{ steps.new.outputs.tag }}|g" {} \;
          
      - name: Commit changes
        run: |
          git add .
          git commit -m "chore: bump version to ${{ steps.new.outputs.tag }}"
          
      - name: Create and push tag
        run: |
          git tag -a "${{ steps.new.outputs.tag }}" -m "Release ${{ steps.new.outputs.tag }}"
          git push origin main
          git push origin "${{ steps.new.outputs.tag }}"